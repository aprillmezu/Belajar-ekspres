"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.QueryForAllParser = void 0;
const joi_1 = __importDefault(require("joi"));
const query_parser_1 = require("./query-parser");
const query_helper_1 = require("./query-helper");
class QueryForAllParser extends query_parser_1.QueryParser {
    schema() {
        return joi_1.default.object({
            page: joi_1.default.object({
                number: joi_1.default.number().positive().messages({
                    'number.base': 'page number must be a number',
                    'number.positive': 'page number must be a positive number',
                }),
                size: joi_1.default.number().positive().messages({
                    'number.base': 'page size must be a number',
                    'number.positive': 'page size must be a positive number',
                }),
            }).messages({
                'object.base': 'page must be an object',
            }),
            filter: joi_1.default.object().messages({
                'object.base': 'filter must be an object',
            }),
            sort: joi_1.default.string().messages({
                'string.base': 'sort must be a string',
            }),
            include: joi_1.default.string().messages({
                'string.base': 'include must be a string',
            }),
        });
    }
    parse(query) {
        return {
            page: (0, query_helper_1.parsePage)(query.page),
            include: (0, query_helper_1.parseInclude)(query.include),
            sort: (0, query_helper_1.parseSort)(query.sort),
            filter: (0, query_helper_1.parseFilter)(query.filter),
        };
    }
}
exports.QueryForAllParser = QueryForAllParser;
